package com.dastanapps.services

import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.Service
import android.content.Context
import android.content.Intent
import android.os.Binder
import android.os.Build
import android.os.IBinder
import android.support.v4.app.NotificationCompat

class MyService : Service() {

    inner class LocalBinder: Binder() {
        fun getLocalService():MyService{
            return this@MyService
        }
    }
    val mBinder=LocalBinder()

    override fun onBind(intent: Intent): IBinder {
        return mBinder
    }

    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
        buildNotification()
        return START_NOT_STICKY
    }

    private fun buildNotificationChannel(appContext: Context?) {
        if (appContext != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val chan1 = NotificationChannel("hello",
                    "hello2",
                    NotificationManager.IMPORTANCE_DEFAULT)

            val nm = appContext.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
            nm.createNotificationChannel(chan1)
        }
    }

    fun buildNotification() {
        buildNotificationChannel(applicationContext)
        val notificationManager: NotificationManager? =
                getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
        notificationManager?.let {
            val mBuilder = NotificationCompat.Builder(applicationContext,
                    "hello")
            val notification = mBuilder
                    .setContentTitle("Title")
                    .setContentText("Description")
                    .setSmallIcon(R.mipmap.ic_launcher)
                    .build()
            startForeground(20, notification)
        } ?: stopSelf()
    }
}
